version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/ruby:2.6-stretch-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
    steps:
      - checkout

      # Bundle dependencies
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
            - bundle-
      - run: bundle check || bundle install
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Yarn dependencies
      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
            - yarn-
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Metrics Yarn dependencies
      - restore_cache:
          keys:
            - metrics-yarn-{{ checksum "metrics/yarn.lock" }}
            - metrics-yarn-
      - run: cd metrics && yarn install --cache-folder ~/.cache/metrics-yarn
      - save_cache:
          key: metrics-yarn-{{ checksum "metrics/yarn.lock" }}
          paths:
            - ~/.cache/metrics-yarn

      # Build
      - run: git submodule update --init --recursive
      - run: bundle exec rake
      - persist_to_workspace:
          root: .
          paths:
            - build
  deploy:
    docker:
      - image: circleci/python:3.6-stretch
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - restore_cache:
          key: deploy-deps-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv vendor/venv
            . vendor/venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deploy-deps-{{ checksum "requirements.txt" }}
          paths:
            - vendor/venv
      - run:
          command: |
            . vendor/venv/bin/activate
            aws s3 sync ./workspace/build/ s3://${BUCKET_NAME}/ --delete
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
