var style = document.createElement('link'); style.rel = 'stylesheet'; style.type = 'text/css';
// Build the URL to the cache-busted embed.css.
//
// Note that the weird joining using the array is to prevent UglifyJS from
// joining the variables during minification. Doing so prevents Middleman's
// asset_hash functionality from correctly rewriting the URL to be the cache
// busted version (which seems like it should be happening before minification
// or as part of the ERB output, but it doesn't appear to behave that way).
var webSiteRoot = '<%= ENV["WEB_SITE_ROOT"] %>';
var stylesheetPath = '<%= asset_url("embed.css", app.config[:css_dir]) %>';
style.href = [webSiteRoot, stylesheetPath].join('');
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(style);

var defaults = {
  containerSelector: '#apidatagov_signup',
  apiUrlRoot: 'https://api.data.gov/api-umbrella',
  contactUrl: 'https://api.data.gov/contact/',
  exampleApiUrl: 'https://api.data.gov/nrel/alt-fuel-stations/v1/nearest.json?api_key={{api_key}}&location=Denver+CO',
  signupConfirmationMessage: '',
  sendWelcomeEmail: true,
  websiteInput: false,
  termsCheckbox: false,
  termsUrl: '',
  verifyEmail: false
};

var options = $.extend({}, defaults, apiUmbrellaSignupOptions || {});

if(!options.apiKey) {
  alert('apiUmbrellaSignupOptions.apiKey must be set');
}

if(!options.registrationSource) {
  alert('apiUmbrellaSignupOptions.registrationSource must be set');
}

bootbox.setDefaults({
  container: options.containerSelector
});

var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
};

function escapeHtml(string) {
  return String(string).replace(/[&<>"']/g, function(s) {
    return htmlEscapes[s];
  });
}

var signupFormTemplate = '<p>Sign up for an application programming interface (API) key to access and use web services available on the Data.gov developer network.</p>' +
'<p class="required-fields"><abbr title="Required" class="required"><span class="abbr-required">*</span></abbr> Required fields</p>' +
  '<form id="apidatagov_signup_form" class="form-horizontal" role="form">' +
    '<div class="form-group">' +
      '<label class="col-sm-4 control-label" for="user_first_name"><abbr title="Required" class="required"><span class="abbr-required">*</span></abbr> First Name</label>' +
      '<div class="col-sm-5">' +
        '<input class="form-control" id="user_first_name" name="user[first_name]" size="50" type="text" required />' +
      '</div>' +
    '</div>' +
    '<div class="form-group">' +
      '<label class="col-sm-4 control-label" for="user_last_name"><abbr title="Required" class="required"><span class="abbr-required">*</span></abbr> Last Name</label>' +
      '<div class="col-sm-5">' +
        '<input class="form-control" id="user_last_name" name="user[last_name]" size="50" type="text" required />' +
      '</div>' +
    '</div>' +
    '<div class="form-group">' +
      '<label class="col-sm-4 control-label" for="user_email"><abbr title="Required" class="required"><span class="abbr-required">*</span></abbr> Email</label>' +
      '<div class="col-sm-5">' +
        '<input class="form-control" id="user_email" name="user[email]" size="50" type="email" required />' +
      '</div>' +
    '</div>';

if(options.websiteInput) {
  signupFormTemplate += '<div class="form-group">' +
      '<label class="col-sm-4 control-label" for="user_website">Website<br />(optional)</label>' +
      '<div class="col-sm-5">' +
        '<input class="form-control" id="user_website" name="user[website]" size="50" type="url" placeholder="http://" />' +
      '</div>' +
    '</div>';
}

signupFormTemplate += '<div class="form-group">' +
      '<label class="col-sm-4 control-label" for="user_use_description">How will you use the APIs?<br />(optional)</label>' +
      '<div class="col-sm-5">' +
        '<textarea class="form-control" cols="40" id="user_use_description" name="user[use_description]" rows="3"></textarea>' +
      '</div>' +
    '</div>';

if(options.termsCheckbox) {
  signupFormTemplate += '<div class="form-group">' +
      '<div class="col-sm-offset-4 col-sm-8">' +
        '<div class="checkbox">' +
          '<label><input id="user_terms_and_conditions" name="user[terms_and_conditions]" type="checkbox" value="1" required data-parsley-error-message="You must agree to the terms and conditions to signup" />I have read and agree to the <a href="' + escapeHtml(options.termsUrl) + '" onclick="window.open(this.href, &#x27;api_umbrella_terms&#x27;, &#x27;height=500,width=790,menubar=no,toolbar=no,location=no,personalbar=no,status=no,resizable=yes,scrollbars=yes&#x27;); return false;" title="Opens new window to terms and conditions">terms and conditions</a>.</label>' +
        '</div>' +
      '</div>' +
    '</div>';
} else {
  signupFormTemplate += '<input type="hidden" name="user[terms_and_conditions]" value="1" />';
}

signupFormTemplate += '<div class="form-group">' +
      '<div class="col-sm-offset-4 col-sm-8">' +
        '<input type="hidden" name="user[registration_source]" value="' + escapeHtml(options.registrationSource) + '" />' +
        '<button type="submit" class="btn btn-lg btn-primary" data-loading-text="Loading...">Signup</button>' +
      '</div>' +
    '</div>' +
  '</form>';

var container = $(options.containerSelector);
container.addClass('api-umbrella-embed');
container.html(signupFormTemplate);

var form = container.find('form');
form.parsley();
form.submit(function(event) {
  var submit = $(this).find('button');
  submit.button('loading');

  event.preventDefault();

  if(options.contactUrl && options.contactUrl.indexOf('@') !== -1 && options.contactUrl.indexOf('mailto:') === -1) {
    options.contactUrl = 'mailto:' + options.contactUrl;
  }

  var data = $(this).serializeArray();
  data.push({ name: 'options[example_api_url]', value: options.exampleApiUrl });
  data.push({ name: 'options[contact_url]', value: options.contactUrl });
  data.push({ name: 'options[site_name]', value: options.siteName });
  data.push({ name: 'options[send_welcome_email]', value: options.sendWelcomeEmail });
  data.push({ name: 'options[email_from_name]', value: options.emailFromName });
  data.push({ name: 'options[email_from_address]', value: options.emailFromAddress });
  data.push({ name: 'options[verify_email]', value: options.verifyEmail });

  $.ajax({
    url: options.apiUrlRoot + '/v1/users.json?api_key=' + options.apiKey,
    type: 'POST',
    data: data,
    dataType: 'json',
    crossDomain: true,
  }).done(function(response) {
    var user = response.user;
    var exampleApiUrl = escapeHtml(options.exampleApiUrl).replace('{{api_key}}', user.api_key);
    var formattedExampleApiUrl = escapeHtml(options.exampleApiUrl).replace('api_key={{api_key}}', '<strong>api_key=' + escapeHtml(user.api_key) + '</strong>');

    var confirmationTemplate = '';
    if(options.verifyEmail) {
      confirmationTemplate += '<p>Your API key for <strong>' + escapeHtml(user.email) + '</strong> has been e-mailed to you. You can use your API key to begin making web service requests immediately.</p>';
      confirmationTemplate += '<p>If you don\'t receive your API Key via e-mail within a few minutes, please <a href="' + escapeHtml(options.contactUrl) + '">contact us</a>.</p>';
    } else {
      confirmationTemplate += '<p>Your API key for <strong>' + escapeHtml(user.email) + '</strong> is:</p>' +
        '<code class="signup-key">' + escapeHtml(user.api_key) + '</code>' +
        '<p>You can start using this key to make web service requests. Simply pass your key in the URL when making a web request. Here\'s an example:</p>' +
        '<pre class="signup-example"><a href="' + exampleApiUrl + '">' + formattedExampleApiUrl + '</a></pre>';
    }

    confirmationTemplate += options.signupConfirmationMessage +
      '<div class="signup-footer">' +
        '<p>For additional support, please <a href="' + escapeHtml(options.contactUrl) + '">contact us</a>. When contacting us, please tell us what API you\'re accessing and provide the following account details so we can quickly find you:</p>' +
        'Account Email: ' + escapeHtml(user.email) + '<br>' +
        'Account ID: ' + escapeHtml(user.id) +
      '</div>';

    $(options.containerSelector).html(confirmationTemplate);
    $(options.containerSelector)[0].scrollIntoView();
  }).fail(function(xhr, message, error) {
    var messages = [],
        messageStr = '';
    if(typeof(Rollbar) != 'undefined') {
      Rollbar.error('Unexpected signup failure', { error: error, message: message, response: xhr.responseText  });
    }

    if (xhr.responseJSON && xhr.responseJSON.errors) {
      $.each(xhr.responseJSON.errors, function(idx, error) {
        if (error.message) {
          messages.push(escapeHtml(error.message));
        }
      });
    }
    if (messages) {
      messageStr = '<br><ul><li>' + messages.join('</li><li>') + '</li></ul>';
    }

    bootbox.alert('API key signup unexpectedly failed.' + messageStr + '<br>Please try again or <a href="' + escapeHtml(options.contactUrl) + '">contact us</a> for assistance.');
  }).always(function() {
    submit.button('reset');
  });
});

