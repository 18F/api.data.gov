#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile %r{/assets/(stylesheets|javascripts)/.+/} do
  filter :sprockets, {
    :css_compressor => :scss,
    :js_compressor  => :uglifier
  }

  filter :cache_buster
end

compile '*' do
  if item.binary?
    # don’t filter binary items
    case item[:extension]
    when 'json'
      filter :validate_json
    end
  else
    filter :erb

    case item[:extension]
    when 'md'
      filter :mustache

      filter :kramdown, {
        :input => 'GFM',
        :smart_quotes => ['apos', 'apos', 'quot', 'quot'],
        :enable_coderay => true,
        :coderay_css => :class,
        :coderay_line_numbers => nil,
      }
    when 'json'
      filter :validate_json
    end

    if(item[:extension] != "json")
      filter :add_ids_to_headers

      layout 'default'

      filter :cache_buster
    end
  end
end

route "/CNAME/" do
  "/CNAME"
end

route %{/images/.+} do
  fp = fingerprint(item[:filename])
  "#{item.identifier.chop}#{fp}.#{item[:extension]}"
end

route '/assets/*/' do
  asset_path(item)
end

route '*' do
  if(item.binary? || item[:extension] == "json")
    # Write item with identifier /foo/ to /foo.ext
    "#{item.identifier.chop}.#{item[:extension]}"
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
